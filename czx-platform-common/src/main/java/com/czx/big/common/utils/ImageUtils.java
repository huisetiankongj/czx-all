package com.czx.big.common.utils;

/**
 * 处理水印类
 */
import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.imageio.ImageIO;

import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

import com.sun.image.codec.jpeg.JPEGCodec;
import com.sun.image.codec.jpeg.JPEGImageEncoder;



public final class ImageUtils {
	
	private static BASE64Encoder base64en = new BASE64Encoder();
    private static BASE64Decoder base64de = new BASE64Decoder();
    
    //水印图片base64码
    private static String shuiyingImg = "水印的base64字符串，这里省略！";
        
    /**
     * 根据base64码加上水印后返回新的base64码
     * @param srcStr 照片base64字符串
     * @return
     */
    public final static String addWatermark(String srcStr) throws IOException,Exception{
    	//根据传递的base64图片的大小来决定水印图片的大小。
        //处理透明信息
		float alpha = 0.3F;
		int srcWidth = 0;
		int srcHeight = 0;
		byte[] b ;
		try {
			b = base64de.decodeBuffer(srcStr);
			InputStream is = new java.io.ByteArrayInputStream(b);
			BufferedImage src = ImageIO.read(is);
			if(src != null ){
				srcWidth = src.getWidth(null);
				srcHeight = src.getHeight(null);
				if(srcWidth<=0||srcHeight<=0)
					return null;
				//根据原始图片变换水印图片的尺寸
				BufferedImage waterMark = resize(shuiyingImg,srcWidth,srcHeight);
				/*添加水印*/
				BufferedImage img = new java.awt.image.BufferedImage(srcWidth, srcHeight,BufferedImage.TYPE_USHORT_565_RGB);
				//创建画板
				Graphics2D graph = img.createGraphics();
				//把原图印到图板上
				graph.drawImage(src,null,0,0);
				//设置透明度,alpha
				graph.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_ATOP, alpha)); 
				//画水印图片
				graph.drawImage(waterMark,null,0,0);
				/*把图片转换为字节*/
	            ByteArrayOutputStream jpegOutputStream = new ByteArrayOutputStream();
	            JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(jpegOutputStream);
	            encoder.encode(img);
	            byte[] resultByte = jpegOutputStream.toByteArray();
				//ImageIO.write(img, "jpg",new File("d://wave.jpg"));
				//System.out.println("加水印完成");
				graph.dispose();
				//System.out.println(base64en.encode(resultByte));
				return base64en.encode(resultByte);
			}else{
				return null;
			}
		}catch (IOException e) {
			e.printStackTrace();
			return null;
		} 
		catch (Exception e) {
			e.printStackTrace();
			return null;
		}
    }
    
    
    /**
     * 根据图片大小，自动变化水印图片大小。
     * @param src：
     * @param w：原图片宽度
     * @param h：元图片高度
     * @return:返回image
     */
    public static BufferedImage resize(String src,int w,int h) {
		byte[] b;
		// 加载内存中的水印图片
		try {
			b = base64de.decodeBuffer(src);
			InputStream is = new java.io.ByteArrayInputStream(b);
			BufferedImage img = ImageIO.read(is);
			// 获得适合的缩放比率，即以在规定缩略尺寸中完整显示图片内容的同时又保证最大的缩放比率
			// 根据比例画出缓存图像
			BufferedImage mini = new java.awt.image.BufferedImage(w, h,BufferedImage.TYPE_USHORT_565_RGB);
			Graphics2D gmini = mini.createGraphics();
			gmini.setBackground(Color.WHITE);
			// 让生成的图片按相同的比例变换
			gmini.clearRect(0, 0, w, h);
			
			AffineTransform trans = new AffineTransform();
			// 长和宽同时变换
			trans.scale((double) w / img.getWidth(), (double) h/ img.getHeight());
			gmini.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_ATOP, 0.7f));
			AffineTransformOp op = new AffineTransformOp(trans,AffineTransformOp.TYPE_BILINEAR);
			gmini.drawImage(img, op, 0, 0);
			gmini.dispose();
			return mini;
		} catch (IOException e) {
			return null;
		}
	}
    
    
	// 图片转化成base64字符串
	public static String imgToBase64(String imgFile) {// 将图片文件转化为字节数组字符串，并对其进行Base64编码处理
		//String imgFile = "d://test.jpg";// 待处理的图片
		InputStream in = null;
		byte[] data = null;
		// 读取图片字节数组
		try {
			in = new FileInputStream(imgFile);
			data = new byte[in.available()];
			in.read(data);
			in.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		// 对字节数组Base64编码
		BASE64Encoder encoder = new BASE64Encoder();
		if(data==null)
			return "";
		else
			return encoder.encode(data);// 返回Base64编码过的字节数组字符串
	}

	// base64字符串转化成图片
	public static String base64ToImg(String base64Str, String basePath) { // 对字节数组字符串进行Base64解码并生成图片
		if (base64Str == null) // 图像数据为空
			return "";
		BASE64Decoder decoder = new BASE64Decoder();
		try {
			// Base64解码
			byte[] b = decoder.decodeBuffer(base64Str);
			for (int i = 0; i < b.length; ++i) {
				if (b[i] < 0) {// 调整异常数据
					b[i] += 256;
				}
			}
			// 生成jpeg图片
			//String imgFilePath = "d://222.jpg";// 新生成的图片
			//System.out.println("转换过图片bas64："+Arrays.toString(b));
			File finalFile = new File(basePath);
			if(!finalFile.exists()){
				finalFile.mkdir();    
			}
			String imgFileName = Utils.randomUUID()+".jpg";// 新生成的图片
			OutputStream out = new FileOutputStream(basePath+imgFileName);
			out.write(b);
			out.flush();
			out.close();
			return imgFileName;
		} catch (Exception e) {
			return "";
		}
	}
	
    public static void main(String[] args) {
    	/*String imgFile = "d://222.jpg";//待处理的图片   
        InputStream in = null;   
        byte[] data = null;   
        //读取图片字节数组   
        try{   
            in = new FileInputStream(imgFile);           
            data = new byte[in.available()];   
            in.read(data);   
            in.close();   
        }catch (IOException e){   
            e.printStackTrace();   
        }   
        //对字节数组Base64编码   
        BASE64Encoder encoder = new BASE64Encoder();   */
    	String img="/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAAA8AAD/4QNvaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6NTY6MjcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NkNBQkIyOEExRDg2RTYxMTg5OTlEN0U4QzdDNjkyN0UiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NzY3RDg2OTU4QTUxMTFFNkJCMzZCQjE2NEE4Rjg5MDMiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NzY3RDg2OTQ4QTUxMTFFNkJCMzZCQjE2NEE4Rjg5MDMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoV2luZG93cykiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo1ODUzNDBDMkRFODlFNjExQUIyREI2NTQ3NDU5QTFBOCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo2Q0FCQjI4QTFEODZFNjExODk5OUQ3RThDN0M2OTI3RSIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6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";
    	try {
			System.out.println(ImageUtils.base64ToImg(img,"d://"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
    
}